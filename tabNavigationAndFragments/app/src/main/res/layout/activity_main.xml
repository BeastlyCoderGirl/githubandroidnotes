<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    /*
        Step 1.
    To get the toolbar to move when content in the fragment is
    scrolled, we’ll add a coordinator layout to MainActivity. A
    coordinator layout is like a souped-up frame layout that’s used to
    coordinate animations and transitions between different views. In
    this case, we’ll use the coordinator layout to coordinate scrollable
    content in TopFragment and MainActivity’s toolbar.
    */

    //This is going to be your appbar which is going to display underneath the toolbar
    <com.google.android.material.appbar.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        //This is the toolbar which is going to display ontop of the appBar
        <androidx.appcompat.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="?attr/actionBarSize"
            app:layout_scrollFlags="scroll|enterAlways" />
            //Add this line above to enable the
        Toolbar to scroll. If you
        wanted the TabLayout to
        scroll too, you’d add the
        code to that element as well.


        //This is going to be the tab layout
        <com.google.android.material.tabs.TabLayout
            android:id="@+id/tabs"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

            //These are going to be the tabItems which are going to display
            //home pizza pasta and store
            <com.google.android.material.tabs.TabItem
                android:id="@+id/tabItem4"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/home_tab" />

            //These are going to be the tabItems which are going to display
            //home pizz pasta and store
            <com.google.android.material.tabs.TabItem
                android:id="@+id/tabItem3"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/pizza_tab" />

            //These are going to be the tabItems which are going to display
            //home pizz pasta and store
            <com.google.android.material.tabs.TabItem
                android:id="@+id/tabItem2"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/pasta_tab" />

            //These are going to be the tabItems which are going to display
            //home pizz pasta and store
            <com.google.android.material.tabs.TabItem
                android:id="@+id/tabItem"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/store_tab" />
        </com.google.android.material.tabs.TabLayout>

        //And make sure its wrapped around these views
    </com.google.android.material.appbar.AppBarLayout>


    //And this is the viewPager2
    <androidx.viewpager2.widget.ViewPager2
        android:id="@+id/pager"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"/>

    //This line above marks the view whose
    content you expect the user to scroll

</androidx.coordinatorlayout.widget.CoordinatorLayout>