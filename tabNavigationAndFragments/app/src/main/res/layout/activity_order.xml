<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/coordinator"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    /*
    We’ve added an ID to the layout
    CoordinatorLayout, as we’ll
    need it later in the chapter.
    */

    //We need to create an appbar
    <com.google.android.material.appbar.AppBarLayout
        android:layout_width="match_parent"
        android:layout_height="300dp"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

        //This is the
        CollapsingToolbarLayout.
        It needs to be within an
        AppBarLayout.
        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            app:contentScrim="?attr/colorPrimary">

            //This  Above line changes the toolbar
            background when it’s collapsed.

            //This line is optional. It adds parallax
            animation so the image moves at a
            different rate than the scrollable content.
            <ImageView
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:scaleType="centerCrop"
                android:src="@drawable/restaurant"
                android:contentDescription="@string/restaurant_image"
                app:layout_collapseMode="parallax"/>


            //Initially i couldn't see toolbar or the backspace arrow
            //So i needed to create an id
            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin" />

        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>

    //The NestedScrollView contains
    the content we want the user
    to be able to scroll.
    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        //We’re using a
        LinearLayout
        to position
        the scrollable
        content
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:padding="16dp">

            //We’re using EditTexts to add some
            content we can scroll to the layout.
            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="@string/order_name_hint" />

            //We’re using EditTexts to add some
            content we can scroll to the layout.
            <EditText
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:hint="@string/order_details_hint"
               />

        </LinearLayout>
    </androidx.core.widget.NestedScrollView>

    //We’re adding
    the FAB to the
    CoordinatorLayout
    so that it will
    move out the way
    when a snackbar
    gets displayed.
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="end|bottom"
        android:layout_margin="16dp"
        android:src="@drawable/ic_done"
        android:onClick="onClickDone"/>

</androidx.coordinatorlayout.widget.CoordinatorLayout>